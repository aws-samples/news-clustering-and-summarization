
# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*
*.lock.hcl
*.venv
# Crash log files
crash.log

*.zip
*.pem
*.tar.gz

# Ignore any .tfvars files that are generated automatically for each Terraform run. Most
# .tfvars files are managed as part of configuration and so should be included in
# version control.
#
# example.tfvars

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
#
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Pycharm
.venv
.idea
.idea/

# Go files
go.mod
go.sum

# node modules
**/node_modules/*

# build folder
**/build/*

# MacOS folder
.DS_Store

# Local developer temporary files such as for scratchpads
temp-*

# Files created by gitlab-runner
builds

# project generated files
environment/.environment-*.json
environment/.current-environment
environment/.cli-profiles.json
environment/app-env-var-names-backup.txt
environment/.choice-cache.json
environment/make-env
environment/.log.txt
cicd/iam-role/final-cicd-iam-role.json
iac/bootstrap/final-tf-backend-cf-stack.json
*.bak
config/.env
package

model_evaluation/

.env
1000_embeddings.json
5000_embeddings.json

articles/
customer_data/
public_data/
featured_data/
eps_screen_results/
test_results/
cluster_results

# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
**/node_modules
**/.pnp
.pnp.js

# testing
**/coverage

# production
**/build

# misc
.DS_Store
.env.local
.env.development.local
.env.test.local
.env.production.local

npm-debug.log*
yarn-debug.log*
yarn-error.log*

*.env
**/*.env
**/aws-exports.js
venv